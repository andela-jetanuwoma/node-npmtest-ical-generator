{"/home/travis/build/npmtest/node-npmtest-ical-generator/test.js":"/* istanbul instrument in package npmtest_ical_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ical-generator/lib.npmtest_ical_generator.js":"/* istanbul instrument in package npmtest_ical_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ical_generator = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ical_generator = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ical-generator/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ical-generator && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ical_generator */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ical_generator\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ical_generator.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ical_generator.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ical_generator.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ical_generator.__dirname + '/lib.npmtest_ical_generator.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/index.js":"module.exports = function(data) {\n    'use strict';\n\n    /**\n     * @type {ICalCalendar}\n     */\n    var Calendar = require('./calendar.js');\n    return new Calendar(data);\n};\n","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/gruntfile.js":"module.exports = function(grunt) {\n    'use strict';\n\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n\n    grunt.initConfig({\n        jshint: {\n            options: {\n                jshintrc: true\n            },\n            lib: [\n                'lib/*.js',\n                'test/*.js'\n            ]\n        },\n        watch: {\n            lib: {\n                files: ['lib/*.js', 'test/*.js'],\n                tasks: ['jshint:lib']\n            }\n        }\n    });\n\n    grunt.registerTask('default', ['jshint:lib']);\n    grunt.registerTask('dev', ['jshint:lib', 'watch']);\n};","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/alarm.js":"'use strict';\n\n\n/**\n * @author Sebastian Pekarek\n * @module alarm\n * @constructor ICalAlarm Alarm\n */\nvar ICalAlarm = function(_data, event) {\n    var attributes = ['type', 'trigger', 'triggerBefore', 'triggerAfter', 'repeat', 'interval', 'attach', 'description'],\n        vars,\n        i,\n        data;\n\n    if(!event) {\n        throw '`event` option required!';\n    }\n\n    vars = {\n        types: ['display', 'audio']\n    };\n\n    data = {\n        type: null,\n        trigger: null,\n        repeat: null,\n        repeatInterval: null,\n        attach: null,\n        description: null\n    };\n\n\n    /**\n     * Set/Get the alarm type\n     *\n     * @param type Type\n     * @since 0.2.1\n     * @returns {ICalAlarm|String}\n     */\n    this.type = function(type) {\n        if(type === undefined) {\n            return data.type;\n        }\n        if(!type) {\n            data.type = null;\n            return this;\n        }\n\n        if(vars.types.indexOf(type) === -1) {\n            throw '`type` is not correct, must be either `display` or `audio`!';\n        }\n\n        data.type = type;\n        return this;\n    };\n\n\n    /**\n     * Set/Get seconds before event to trigger alarm\n     *\n     * @param {Number|Date} trigger Seconds before alarm triggeres\n     * @since 0.2.1\n     * @returns {ICalAlarm|Number|Date}\n     */\n    this.trigger = function(trigger) {\n        if(trigger === undefined && data.trigger instanceof Date) {\n            return data.trigger;\n        }\n        if(trigger === undefined && data.trigger) {\n            return -1 * data.trigger;\n        }\n        if(trigger === undefined) {\n            return null;\n        }\n\n\n        if(!trigger) {\n            data.trigger = null;\n            return this;\n        }\n        if(trigger instanceof Date) {\n            data.trigger = trigger;\n            return this;\n        }\n        if(typeof trigger === 'number' && isFinite(trigger)) {\n            data.trigger = -1 * trigger;\n            return this;\n        }\n\n        throw '`trigger` is not correct, must be either typeof `Number` or `Date`!';\n    };\n\n\n    /**\n     * Set/Get seconds after event to trigger alarm\n     *\n     * @param {Number|Date} trigger Seconds after alarm triggeres\n     * @since 0.2.1\n     * @returns {ICalAlarm|Number|Date}\n     */\n    this.triggerAfter = function(trigger) {\n        if(trigger === undefined) {\n            return data.trigger;\n        }\n\n        return this.trigger(typeof trigger === 'number' ? -1 * trigger : trigger);\n    };\n\n    /**\n     * Set/Get seconds before event to trigger alarm\n     *\n     * @param {Number|Date} trigger Seconds before alarm triggeres\n     * @since 0.2.1\n     * @alias trigger\n     * @returns {ICalAlarm|Number|Date}\n     */\n    this.triggerBefore = this.trigger;\n\n\n    /**\n     * Set/Get Alarm Repetitions\n     *\n     * @param {Number} Number of repetitions\n     * @since 0.2.1\n     * @returns {ICalAlarm|Number}\n     */\n    this.repeat = function(repeat) {\n        if(repeat === undefined) {\n            return data.repeat;\n        }\n        if(!repeat) {\n            data.repeat = null;\n            return this;\n        }\n\n        if(typeof repeat !== 'number' || !isFinite(repeat)) {\n            throw '`repeat` is not correct, must be numeric!';\n        }\n\n        data.repeat = repeat;\n        return this;\n    };\n\n\n    /**\n     * Set/Get Repeat Interval\n     *\n     * @param {Number} Interval in seconds\n     * @since 0.2.1\n     * @returns {ICalAlarm|Number|Null}\n     */\n    this.interval = function(interval) {\n        if(interval === undefined) {\n            return data.interval;\n        }\n        if(!interval) {\n            data.interval = null;\n            return this;\n        }\n\n        if(typeof interval !== 'number' || !isFinite(interval)) {\n            throw '`interval` is not correct, must be numeric!';\n        }\n\n        data.interval = interval;\n        return this;\n    };\n\n\n    /**\n     * Set/Get Attachment\n     *\n     * @param {Object|String} File-URI or Object\n     * @since 0.2.1\n     * @returns {ICalAlarm|Object}\n     */\n    this.attach = function(_attach) {\n        if(_attach === undefined) {\n            return data.attach;\n        }\n        if(!_attach) {\n            data.attach = null;\n            return this;\n        }\n\n        var attach = null;\n        if(typeof _attach === 'string') {\n            attach = {\n                uri: _attach,\n                mime: null\n            };\n        }\n        else if(typeof _attach === 'object') {\n            attach = {\n                uri: _attach.uri,\n                mime: _attach.mime || null\n            };\n        }\n        else {\n            throw '`attach` needs to be a valid formed string or an object. See https://github.com/sebbo2002/ical-generator#attachstringobject-attach';\n        }\n\n        if(!attach.uri) {\n            throw '`attach.uri` is empty!';\n        }\n\n        data.attach = {\n            uri: attach.uri,\n            mime: attach.mime\n        };\n        return this;\n    };\n\n\n    /**\n     * Set/Get the alarm description\n     *\n     * @param description Description\n     * @since 0.2.1\n     * @returns {ICalAlarm|String}\n     */\n    this.description = function(description) {\n        if(description === undefined) {\n            return data.description;\n        }\n        if(!description) {\n            data.description = null;\n            return this;\n        }\n\n        data.description = description;\n        return this;\n    };\n\n\n    /**\n     * Export calender as JSON Object to use it later…\n     *\n     * @since 0.2.4\n     * @returns Object Calendar\n     */\n    this.toJSON = function() {\n        var tools = require('./_tools.js');\n        return tools.toJSON(this, attributes);\n    };\n\n\n    /**\n     * Export Event to iCal\n     *\n     * @since 0.2.0\n     * @returns {String}\n     */\n    this.generate = function() {\n        var tools = require('./_tools.js'),\n            g = 'BEGIN:VALARM\\r\\n';\n\n        if(!data.type) {\n            throw 'No value for `type` in ICalAlarm given!';\n        }\n        if(!data.trigger) {\n            throw 'No value for `trigger` in ICalAlarm given!';\n        }\n\n        // ACTION\n        g += 'ACTION:' + data.type.toUpperCase() + '\\r\\n';\n\n        if(data.trigger instanceof Date) {\n            g += 'TRIGGER;VALUE=DATE-TIME:' + tools.formatDate(data.trigger) + '\\r\\n';\n        }\n        else if(data.trigger > 0) {\n            g += 'TRIGGER;RELATED=END:' + tools.duration(data.trigger) + '\\r\\n';\n        }\n        else {\n            g += 'TRIGGER:' + tools.duration(data.trigger) + '\\r\\n';\n        }\n\n        // REPEAT\n        if(data.repeat && !data.interval) {\n            throw 'No value for `interval` in ICalAlarm given, but required for `repeat`!';\n        }\n        if(data.repeat) {\n            g += 'REPEAT:' + data.repeat + '\\r\\n';\n        }\n\n        // INTERVAL\n        if(data.interval && !data.repeat) {\n            throw 'No value for `repeat` in ICalAlarm given, but required for `interval`!';\n        }\n        if(data.interval) {\n            g += 'DURATION:' + tools.duration(data.interval) + '\\r\\n';\n        }\n\n        // ATTACH\n        if(data.type === 'audio' && data.attach && data.attach.mime) {\n            g += 'ATTACH;FMTTYPE=' + data.attach.mime + ':' + data.attach.uri + '\\r\\n';\n        }\n        else if(data.type === 'audio' && data.attach) {\n            g += 'ATTACH;VALUE=URI:' + data.attach.uri + '\\r\\n';\n        }\n        else if(data.type === 'audio') {\n            g += 'ATTACH;VALUE=URI:Basso\\r\\n';\n        }\n\n        // DESCRIPTION\n        if(data.type === 'display' && data.description) {\n            g += 'DESCRIPTION:' + tools.escape(data.description) + '\\r\\n';\n        }\n        else if(data.type === 'display') {\n            g += 'DESCRIPTION:' + tools.escape(event.summary()) + '\\r\\n';\n        }\n\n        g += 'END:VALARM\\r\\n';\n        return g;\n    };\n\n\n    for(i in _data) {\n        if(_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n            this[i](_data[i]);\n        }\n    }\n};\n\nmodule.exports = ICalAlarm;","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/attendee.js":"'use strict';\n\n\n/**\n * @author Sebastian Pekarek\n * @module attendee\n * @constructor ICalAttendee Attendee\n */\nvar ICalAttendee = function(_data, event) {\n    var attributes = ['name', 'email', 'role', 'status', 'type', 'delegatedTo', 'delegatedFrom', 'delegatesFrom', 'delegatesTo'],\n        vars,\n        i,\n        data;\n\n    if(!event) {\n        throw '`event` option required!';\n    }\n\n    vars = {\n        allowed: {\n            role: ['REQ-PARTICIPANT', 'NON-PARTICIPANT'],\n            status: ['ACCEPTED', 'TENTATIVE', 'DECLINED', 'DELEGATED'],\n            type: ['INDIVIDUAL', 'GROUP', 'RESOURCE', 'ROOM', 'UNKNOWN'] // ref: https://tools.ietf.org/html/rfc2445#section-4.2.3\n        }\n    };\n\n    data = {\n        name: null,\n        email: null,\n        status: null,\n        role: 'REQ-PARTICIPANT',\n        type: null,\n        delegatedTo: null,\n        delegatedFrom: null\n    };\n\n\n    function getAllowedRole(str) {\n        return getAllowedStringFor('role', str);\n    }\n\n    function getAllowedStatus(str) {\n        return getAllowedStringFor('status', str);\n    }\n\n    function getAllowedType(str) {\n        return getAllowedStringFor('type', str);\n    }\n\n    function getAllowedStringFor(type, str) {\n        if(!str || typeof(str) !== 'string') {\n            throw new Error('Input for `' + type + '` must be a non-empty string. You gave ' + str);\n        }\n\n        str = str.toUpperCase();\n\n        if(vars.allowed[type].indexOf(str) === -1) {\n            throw new Error('`' + type + '` must be one of the following: ' + vars.allowed[type].join(', ') + '!');\n        }\n\n        return str;\n    }\n\n\n    /**\n     * Set/Get the attendee's name\n     *\n     * @param name Name\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.name = function(name) {\n        if(name === undefined) {\n            return data.name;\n        }\n\n        data.name = name || null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the attendee's email address\n     *\n     * @param email Email address\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.email = function(email) {\n        if(!email) {\n            return data.email;\n        }\n\n        data.email = email;\n        return this;\n    };\n\n\n    /**\n     * Set/Get attendee's role\n     *\n     * @param {String} role\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.role = function(role) {\n        if(role === undefined) {\n            return data.role;\n        }\n\n        data.role = getAllowedRole(role);\n        return this;\n    };\n\n\n    /**\n     * Set/Get attendee's status\n     *\n     * @param {String} status\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.status = function(status) {\n        if(status === undefined) {\n            return data.status;\n        }\n        if(!status) {\n            data.status = null;\n            return this;\n        }\n\n        data.status = getAllowedStatus(status);\n        return this;\n    };\n\n\n    /**\n     * Set/Get attendee's type (a.k.a. CUTYPE)\n     *\n     * @param {String} type\n     * @since 0.2.3\n     * @returns {ICalAttendee|String}\n     */\n    this.type = function(type) {\n        if(type === undefined) {\n            return data.type;\n        }\n        if(!type) {\n            data.type = null;\n            return this;\n        }\n        data.type = getAllowedType(type);\n        return this;\n    };\n\n\n    /**\n     * Set/Get the attendee's delegated-to field\n     *\n     * @param delegatedTo Email address\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.delegatedTo = function(delegatedTo) {\n        if(delegatedTo === undefined) {\n            return data.delegatedTo;\n        }\n        if(!delegatedTo) {\n            data.delegatedTo = null;\n            if(data.status === 'DELEGATED') {\n                data.status = null;\n            }\n            return this;\n        }\n\n        data.delegatedTo = delegatedTo;\n        data.status = 'DELEGATED';\n        return this;\n    };\n\n\n    /**\n     * Set/Get the attendee's delegated-from field\n     *\n     * @param delegatedFrom Email address\n     * @since 0.2.0\n     * @returns {ICalAttendee|String}\n     */\n    this.delegatedFrom = function(delegatedFrom) {\n        if(delegatedFrom === undefined) {\n            return data.delegatedFrom;\n        }\n\n        data.delegatedFrom = delegatedFrom || null;\n        return this;\n    };\n\n\n    /**\n     * Create a new attendee this attendee delegates to\n     * and returns this new attendee\n     *\n     * @param {Object} options\n     * @since 0.2.0\n     * @returns {ICalAttendee}\n     */\n    this.delegatesTo = function(options) {\n        var a = options instanceof ICalAttendee ? options : event.createAttendee(options);\n        this.delegatedTo(a);\n        a.delegatedFrom(this);\n        return a;\n    };\n\n\n    /**\n     * Create a new attendee this attendee delegates from\n     * and returns this new attendee\n     *\n     * @param {Object} options\n     * @since 0.2.0\n     * @returns {ICalAttendee}\n     */\n    this.delegatesFrom = function(options) {\n        var a = options instanceof ICalAttendee ? options : event.createAttendee(options);\n        this.delegatedFrom(a);\n        a.delegatedTo(this);\n        return a;\n    };\n\n\n    /**\n     * Export calender as JSON Object to use it later…\n     *\n     * @since 0.2.4\n     * @returns Object Calendar\n     */\n    this.toJSON = function() {\n        var tools = require('./_tools.js');\n        return tools.toJSON(this, attributes, {\n            ignoreAttributes: ['delegatesTo', 'delegatesFrom'],\n            hooks: {\n                delegatedTo: function(value) {\n                    return (value instanceof ICalAttendee ? value.email() : value);\n                },\n                delegatedFrom: function(value) {\n                    return (value instanceof ICalAttendee ? value.email() : value);\n                }\n            }\n        });\n    };\n\n\n    /**\n     * Export Event to iCal\n     *\n     * @since 0.2.0\n     * @returns {String}\n     */\n    this.generate = function() {\n        var g = 'ATTENDEE';\n\n        if(!data.email) {\n            throw 'No value for `email` in ICalAttendee given!';\n        }\n\n        // ROLE\n        g += ';ROLE=' + data.role;\n\n        // TYPE\n        if(data.type) {\n            g += ';CUTYPE=' + data.type;\n        }\n\n        // PARTSTAT\n        if(data.status) {\n            g += ';PARTSTAT=' + data.status;\n        }\n\n        // DELEGATED-TO\n        if(data.delegatedTo) {\n            g += ';DELEGATED-TO=\"' + (data.delegatedTo instanceof ICalAttendee ? data.delegatedTo.email() : data.delegatedTo) + '\"';\n        }\n\n        // DELEGATED-FROM\n        if(data.delegatedFrom) {\n            g += ';DELEGATED-FROM=\"' + (data.delegatedFrom instanceof ICalAttendee ? data.delegatedFrom.email() : data.delegatedFrom) + '\"';\n        }\n\n        // CN / Name\n        if(data.name) {\n            g += ';CN=\"' + data.name + '\"';\n        }\n\n        g += ':MAILTO:' + data.email + '\\r\\n';\n        return g;\n    };\n\n\n    for(i in _data) {\n        if(_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n            this[i](_data[i]);\n        }\n    }\n};\n\nmodule.exports = ICalAttendee;\n","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/calendar.js":"'use strict';\n\n\n/**\n * @author Sebastian Pekarek\n * @module calendar\n * @constructor ICalCalendar Calendar\n */\nvar ICalCalendar = function(_data) {\n    var data = {},\n        attributes = ['domain', 'prodId', 'method', 'name', 'description', 'timezone', 'ttl', 'url', 'events'],\n        vars,\n        generate,\n        i;\n\n    vars = {\n        allowedMethods: ['PUBLISH', 'REQUEST', 'REPLY', 'ADD', 'CANCEL', 'REFRESH', 'COUNTER', 'DECLINECOUNTER']\n    };\n\n    generate = function(calendar) {\n        var tools = require('./_tools.js'),\n            g = '';\n\n        // VCALENDAR and VERSION\n        g = 'BEGIN:VCALENDAR\\r\\nVERSION:2.0\\r\\n';\n\n        // PRODID\n        g += 'PRODID:-' + data.prodid + '\\r\\n';\n\n        // URL\n        if(data.url) {\n            g += 'URL:' + data.url + '\\r\\n';\n        }\n\n        // METHOD\n        if(data.method) {\n            g += 'METHOD:' + data.method + '\\r\\n';\n        }\n\n        // NAME\n        if(data.name) {\n            g += 'NAME:' + data.name + '\\r\\n';\n            g += 'X-WR-CALNAME:' + data.name + '\\r\\n';\n        }\n\n        // Description\n        if(data.description) {\n            g += 'X-WR-CALDESC:' + data.description + '\\r\\n';\n        }\n\n        // Timezone\n        if(data.timezone) {\n            g += 'TIMEZONE-ID:' + data.timezone + '\\r\\n';\n            g += 'X-WR-TIMEZONE:' + data.timezone + '\\r\\n';\n        }\n\n        // TTL\n        if(data.ttl) {\n            g += 'REFRESH-INTERVAL;VALUE=DURATION:' + tools.duration(data.ttl) + '\\r\\n';\n            g += 'X-PUBLISHED-TTL:' + tools.duration(data.ttl) + '\\r\\n';\n        }\n\n        // Events\n        data.events.forEach(function(event) {\n            g += event.generate(calendar);\n        });\n\n        g += 'END:VCALENDAR';\n\n        g = tools.foldLines(g);\n        return g;\n    };\n\n\n    /**\n     * Set your feed's domain…\n     *\n     * @param domain Domain\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.setDomain = function(domain) {\n        this.domain(domain);\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's domain…\n     *\n     * @param [domain] Domain\n     * @since 0.2.0\n     * @returns {ICalCalendar|String}\n     */\n    this.domain = function(domain) {\n        if(!domain) {\n            return data.domain;\n        }\n\n        data.domain = domain.toString();\n        return this;\n    };\n\n\n    /**\n     * Set your feed's prodid. Can be either a string like\n     * \"//sebbo.net//ical-generator//EN\" or an object like\n     * {\n\t *   \"company\": \"sebbo.net\",\n\t *   \"product\": \"ical-generator\"\n\t *   \"language\": \"EN\"\n\t * }\n     *\n     * `language` is optional and defaults to `EN`.\n     *\n     * @param prodid ProdID\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.setProdID = function(prodid) {\n        if(!prodid || typeof prodid !== 'object') {\n            throw '`prodid` is not an object!';\n        }\n\n        // update errors to 0.1.x version\n        try {\n            this.prodId(prodid);\n        }\n        catch(err) {\n            throw err.replace(/`([\\w.]+)`/i, 'event.$1');\n        }\n\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's prodid. `prodid` can be either a\n     * string like \"//sebbo.net//ical-generator//EN\" or an\n     * object like\n     * {\n     *   \"company\": \"sebbo.net\",\n     *   \"product\": \"ical-generator\"\n     *   \"language\": \"EN\"\n     * }\n     *\n     * `language` is optional and defaults to `EN`.\n     *\n     * @param [prodid] ProdID\n     * @since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.prodId = function(prodid) {\n        if(!prodid) {\n            return data.prodid;\n        }\n\n        var prodIdRegEx = /^\\/\\/(.+)\\/\\/(.+)\\/\\/([A-Z]{1,4})$/,\n            language;\n\n        if(typeof prodid === 'string' && prodIdRegEx.test(prodid)) {\n            data.prodid = prodid;\n            return this;\n        }\n        if(typeof prodid === 'string') {\n            throw '`prodid` isn\\'t formated correctly. See https://github.com/sebbo2002/ical-generator#prodidstringobject-prodid';\n        }\n\n        if(typeof prodid !== 'object') {\n            throw '`prodid` needs to be a valid formed string or an object!';\n        }\n\n        if(!prodid.company) {\n            throw '`prodid.company` is a mandatory item!';\n        }\n        if(!prodid.product) {\n            throw '`prodid.product` is a mandatory item!';\n        }\n\n        language = (prodid.language || 'EN').toUpperCase();\n        data.prodid = '//' + prodid.company + '//' + prodid.product + '//' + language;\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's method\n     *\n     * @param {String} method\n     * @since 0.2.8\n     * @returns {ICalCalendar|String}\n     */\n    this.method = function(method) {\n        if(method === undefined) {\n            return data.method;\n        }\n        if(!method) {\n            data.method = null;\n            return this;\n        }\n\n        if(vars.allowedMethods.indexOf(method.toUpperCase()) === -1) {\n            throw '`method` must be one of the following: ' + vars.allowedMethods.join(', ') + '!';\n        }\n\n        data.method = method.toUpperCase();\n        return this;\n    };\n\n\n    /**\n     * Set your feed's name…\n     *\n     * @param name Name\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.setName = function(name) {\n        this.name(name);\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's name…\n     *\n     * @param [name] Name\n     * @since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.name = function(name) {\n        if(name === undefined) {\n            return data.name;\n        }\n\n        data.name = name ? name.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's description…\n     *\n     * @param [description] Description\n     * @since 0.2.7\n     * @returns {ICalCalendar}\n     */\n    this.description = function(description) {\n        if(description === undefined) {\n            return data.description;\n        }\n\n        data.description = description ? description.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set your feed's timezone.\n     * Used to set `X-WR-TIMEZONE`.\n     *\n     * @param timezone Timezone\n     * @example cal.setTZ('America/New_York');\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.setTZ = function(timezone) {\n        this.timezone(timezone);\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's timezone.\n     * Used to set `X-WR-TIMEZONE`.\n     *\n     * @param [timezone] Timezone\n     * @example cal.timezone('America/New_York');\n     * @since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.timezone = function(timezone) {\n        if(timezone === undefined) {\n            return data.timezone;\n        }\n\n        data.timezone = timezone ? timezone.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's URL\n     *\n     * @param [url] URL\n     * @example cal.url('http://example.com/my/feed.ical');\n     * @since 0.2.5\n     * @returns {ICalCalendar}\n     */\n    this.url = function(url) {\n        if(url === undefined) {\n            return data.url;\n        }\n\n        data.url = url || null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get your feed's TTL.\n     * Used to set `X-PUBLISHED-TTL` and `REFRESH-INTERVAL`.\n     *\n     * @param [ttl] TTL\n     * @example cal.ttl(60 * 60 * 24); // 1 day\n     * @since 0.2.5\n     * @returns {ICalCalendar}\n     */\n    this.ttl = function(ttl) {\n        if(ttl === undefined) {\n            return data.ttl;\n        }\n\n        data.ttl = parseInt(ttl, 10) || null;\n        return this;\n    };\n\n\n    /**\n     * Create a new Event and return the calendar object…\n     *\n     * @param option Event event\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.addEvent = function(event) {\n        if(!event || typeof event !== 'object') {\n            throw 'event is not an object!';\n        }\n\n        // validation: start\n        if(!event.start) {\n            throw 'event.start is a mandatory item!';\n        }\n\n        // validation: summary\n        if(!event.summary) {\n            throw 'event.summary is a mandatory item!';\n        }\n\n\n        var ICalEvent = require('./event.js'),\n            e;\n\n        // update errors to 0.1.x version\n        try {\n            e = new ICalEvent(event, this);\n        }\n        catch(err) {\n            throw err.replace(/`([\\w.]+)`/i, 'event.$1');\n        }\n\n        data.events.push(e);\n        return this;\n    };\n\n\n    /**\n     * Create a new Event and return the event object…\n     *\n     * @param [eventData] Event eventData\n     * @since 0.2.0\n     * @returns {ICalEvent}\n     */\n    this.createEvent = function(eventData) {\n        var ICalEvent = require('./event.js'),\n            event = new ICalEvent(eventData, this);\n\n        data.events.push(event);\n        return event;\n    };\n\n\n    /**\n     * Get all events or add multiple events…\n     *\n     * @since 0.2.0\n     * @returns {ICalEvent[]|ICalCalendar}\n     */\n    this.events = function(events) {\n        if(!events) {\n            return data.events;\n        }\n\n        var cal = this;\n        events.forEach(function(e) {\n            cal.createEvent(e);\n        });\n        return cal;\n    };\n\n\n    /**\n     * Save ical file with `fs.save`\n     *\n     * @param path Filepath\n     * @param [cb] Callback\n     * @returns {ICalCalendar}\n     */\n    this.save = function(path, cb) {\n        require('fs').writeFile(path, generate(this), cb);\n        return this;\n    };\n\n\n    /*jslint stupid: true */\n\n    /**\n     * Save ical file with `fs.saveSync`\n     *\n     * @param path Filepath\n     * @returns Number Number of Bytes written\n     */\n    this.saveSync = function(path) {\n        return require('fs').writeFileSync(path, generate(this));\n    };\n\n    /*jslint stupid: false */\n\n\n    /**\n     * Save ical file with `fs.saveSync`\n     *\n     * @param {http.ServerResponse} response Response\n     * @param String [filename] Filename\n     * @returns Number Number of Bytes written\n     */\n    this.serve = function(response, filename) {\n        response.writeHead(200, {\n            'Content-Type': 'text/calendar; charset=utf-8',\n            'Content-Disposition': 'attachment; filename=\"' + (filename || 'calendar.ics') + '\"'\n        });\n        response.end(generate(this));\n\n        return this;\n    };\n\n\n    /**\n     * Return ical as string…\n     *\n     * @returns String ical\n     */\n    this.toString = function() {\n        return generate(this);\n    };\n\n\n    /**\n     * Export calender as JSON Object to use it later…\n     *\n     * @since 0.2.4\n     * @returns Object Calendar\n     */\n    this.toJSON = function() {\n        var tools = require('./_tools.js');\n        return tools.toJSON(this, attributes);\n    };\n\n\n    /**\n     * Get number of events in calendar…\n     *\n     * @returns Number Number of events in calendar\n     */\n    this.length = function() {\n        return data.events.length;\n    };\n\n\n    /**\n     * Reset calendar to default state…\n     *\n     * @returns {ICalCalendar}\n     */\n    this.clear = function() {\n        data.domain = require('os').hostname();\n        data.prodid = '//sebbo.net//ical-generator//EN';\n        data.method = null;\n        data.name = null;\n        data.timezone = null;\n        data.ttl = null;\n        data.url = null;\n\n        data.events = [];\n        return this;\n    };\n\n\n    /**\n     * Deprecated method, does nothing…\n     *\n     * @deprecated since 0.2.0\n     * @returns {ICalCalendar}\n     */\n    this.generate = function() {\n        return this;\n    };\n\n\n    if(typeof _data === 'string') {\n        _data = JSON.parse(_data);\n    }\n\n    this.clear();\n    for(i in _data) {\n        if(_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n            this[i](_data[i]);\n        }\n    }\n};\n\nmodule.exports = ICalCalendar;\n","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/event.js":"'use strict';\n\n\n/**\n * @author Sebastian Pekarek\n * @module event\n * @constructor ICalEvent Event\n */\nvar ICalEvent = function(_data, calendar) {\n    var attributes = ['id', 'uid', 'sequence', 'start', 'end', 'timezone', 'stamp', 'timestamp', 'allDay', 'floating', 'repeating', 'summary', 'location', 'description', 'organizer', 'attendees', 'alarms', 'method', 'status', 'url'],\n        vars,\n        i,\n        data;\n\n    if(!calendar) {\n        throw '`calendar` option required!';\n    }\n\n    vars = {\n        allowedRepeatingFreq: ['SECONDLY', 'MINUTELY', 'HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'],\n        allowedStatuses: ['CONFIRMED', 'TENTATIVE', 'CANCELLED']\n    };\n\n    data = {\n        id: ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).substr(-4),\n        sequence: 0,\n        start: null,\n        end: null,\n        timezone: undefined,\n        stamp: new Date(),\n        allDay: false,\n        floating: false,\n        repeating: null,\n        summary: '',\n        location: null,\n        description: null,\n        htmlDescription: null,\n        organizer: null,\n        attendees: [],\n        alarms: [],\n        status: null,\n        url: null\n    };\n\n    /**\n     * Set/Get the event's ID\n     *\n     * @param id ID\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.id = function(id) {\n        if(!id) {\n            return data.id;\n        }\n\n        data.id = id;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's ID\n     *\n     * @param id ID\n     * @since 0.2.0\n     * @alias id\n     * @returns {ICalEvent|String}\n     */\n    this.uid = this.id;\n\n\n    /**\n     * Set/Get the event's SEQUENCE number\n     *\n     * @param {Number} sequence\n     * @since 0.2.6\n     * @returns {ICalEvent|Number}\n     */\n    this.sequence = function(sequence) {\n        if(sequence === undefined) {\n            return data.sequence;\n        }\n\n        var s = parseInt(sequence, 10);\n        if(isNaN(s)) {\n            throw '`sequence` must be a number!';\n        }\n\n        data.sequence = s;\n        return this;\n    };\n\n    /**\n     * Set/Get the event's start date\n     *\n     * @param {Date} start\n     * @since 0.2.0\n     * @returns {ICalEvent|Date}\n     */\n    this.start = function(start) {\n        if(!start) {\n            return data.start;\n        }\n\n\n        if(typeof start === 'string') {\n            start = new Date(start);\n        }\n        if(!(start instanceof Date) || isNaN(start.getTime())) {\n            throw '`start` must be a Date Object!';\n        }\n        data.start = start;\n\n        if(data.start && data.end && data.start > data.end) {\n            var t = data.start;\n            data.start = data.end;\n            data.end = t;\n        }\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's end date\n     *\n     * @param {Date} end\n     * @since 0.2.0\n     * @returns {ICalEvent|Date}\n     */\n    this.end = function(end) {\n        if(end === undefined) {\n            return data.end;\n        }\n\n        if(!end) {\n            data.end = null;\n            return this;\n        }\n        if(typeof end === 'string') {\n            end = new Date(end);\n        }\n        if(!(end instanceof Date) || isNaN(end.getTime())) {\n            throw '`end` must be a Date Object!';\n        }\n        data.end = end;\n\n        if(data.start && data.end && data.start > data.end) {\n            var t = data.start;\n            data.start = data.end;\n            data.end = t;\n        }\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's timezone.  This unsets the event's floating flag.\n     * Used on date properties\n     *\n     * @param [timezone] Timezone\n     * @example event.timezone('America/New_York');\n     * @since 0.2.6\n     * @returns {ICalEvent|String}\n     */\n    this.timezone = function(timezone) {\n        if(timezone === undefined && data.timezone !== undefined) {\n            return data.timezone;\n        }\n        if(timezone === undefined) {\n            return calendar.timezone();\n        }\n\n        data.timezone = timezone ? timezone.toString() : null;\n        if(data.timezone) {\n            data.floating = false;\n        }\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's timestamp\n     *\n     * @param {Date} stamp\n     * @since 0.2.0\n     * @returns {ICalEvent|Date}\n     */\n    this.stamp = function(stamp) {\n        if(!stamp) {\n            return data.stamp;\n        }\n\n        if(typeof stamp === 'string') {\n            stamp = new Date(stamp);\n        }\n        if(!(stamp instanceof Date) || isNaN(stamp.getTime())) {\n            throw '`stamp` must be a Date Object!';\n        }\n        data.stamp = stamp;\n        return this;\n    };\n\n\n    /**\n     * SetGet the event's timestamp\n     *\n     * @param {Date} stamp\n     * @since 0.2.0\n     * @alias stamp\n     * @returns {ICalEvent|Date}\n     */\n    this.timestamp = this.stamp;\n\n\n    /**\n     * Set/Get the event's allDay flag\n     *\n     * @param {Boolean} allDay\n     * @since 0.2.0\n     * @returns {ICalEvent|Boolean}\n     */\n    this.allDay = function(allDay) {\n        if(allDay === undefined) {\n            return data.allDay;\n        }\n\n        data.allDay = !!allDay;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's floating flag.  This unsets the event's timezone.\n     * See https://tools.ietf.org/html/rfc5545#section-3.3.12\n     *\n     * @param {Boolean} floating\n     * @since 0.2.0\n     * @returns {ICalEvent|Boolean}\n     */\n    this.floating = function(floating) {\n        if(floating === undefined) {\n            return data.floating;\n        }\n\n        data.floating = !!floating;\n        if(data.floating) {\n            data.timezone = null;\n        }\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's repeating stuff\n     *\n     * @param repeating\n     * @since 0.2.0\n     * @returns {ICalEvent|Object}\n     */\n    this.repeating = function(repeating) {\n        if(repeating === undefined) {\n            return data.repeating;\n        }\n        if(!repeating) {\n            data.repeating = null;\n            return this;\n        }\n\n        if(!repeating.freq || vars.allowedRepeatingFreq.indexOf(repeating.freq.toUpperCase()) === -1) {\n            throw '`repeating.freq` is a mandatory item, and must be one of the following: ' + vars.allowedRepeatingFreq.join(', ') + '!';\n        }\n        data.repeating = {\n            freq: repeating.freq.toUpperCase()\n        };\n\n        if(repeating.count) {\n            if(!isFinite(repeating.count)) {\n                throw '`repeating.count` must be a Number!';\n            }\n\n            data.repeating.count = repeating.count;\n        }\n\n        if(repeating.interval) {\n            if(!isFinite(repeating.interval)) {\n                throw '`repeating.interval` must be a Number!';\n            }\n\n            data.repeating.interval = repeating.interval;\n        }\n\n        if(repeating.until) {\n            if(typeof repeating.until === 'string') {\n                repeating.until = new Date(repeating.until);\n            }\n            if(!(repeating.until instanceof Date) || isNaN(repeating.until.getTime())) {\n                throw '`repeating.until` must be a Date Object!';\n            }\n\n            data.repeating.until = repeating.until;\n        }\n\n        if(repeating.byDay) {\n            if(!Array.isArray(repeating.byDay)) {\n                repeating.byDay = [repeating.byDay];\n            }\n\n            data.repeating.byDay = [];\n            repeating.byDay.forEach(function(symbol) {\n                var s = symbol.toString().toUpperCase().match(/^(\\d*||-\\d+)(\\w+)$/);\n                if(['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'].indexOf(s[2]) === -1) {\n                    throw '`repeating.byDay` contains invalid value `' + s[2] + '`!';\n                }\n\n                data.repeating.byDay.push(s[1] + s[2]);\n            });\n        }\n\n        if(repeating.byMonth) {\n            if(!Array.isArray(repeating.byMonth)) {\n                repeating.byMonth = [repeating.byMonth];\n            }\n\n            data.repeating.byMonth = [];\n            repeating.byMonth.forEach(function(month) {\n                if(typeof month !== 'number' || month < 1 || month > 12) {\n                    throw '`repeating.byMonth` contains invalid value `' + month + '`!';\n                }\n\n                data.repeating.byMonth.push(month);\n            });\n        }\n\n        if(repeating.byMonthDay) {\n            if(!Array.isArray(repeating.byMonthDay)) {\n                repeating.byMonthDay = [repeating.byMonthDay];\n            }\n\n            data.repeating.byMonthDay = [];\n            repeating.byMonthDay.forEach(function(monthDay) {\n                if(typeof monthDay !== 'number' || monthDay < 1 || monthDay > 31) {\n                    throw '`repeating.byMonthDay` contains invalid value `' + monthDay + '`!';\n                }\n\n                data.repeating.byMonthDay.push(monthDay);\n            });\n        }\n\n        if(repeating.exclude) {\n            if(!Array.isArray(repeating.exclude)) {\n                repeating.exclude = [repeating.exclude];\n            }\n\n            data.repeating.exclude = [];\n            repeating.exclude.forEach(function(excludedDate) {\n                var originalDate = excludedDate;\n                if(typeof excludedDate === 'string') {\n                    excludedDate = new Date(excludedDate);\n                }\n\n                if(Object.prototype.toString.call(excludedDate) !== '[object Date]' || isNaN(excludedDate.getTime())) {\n                    throw '`repeating.exclude` contains invalid value `' + originalDate + '`!';\n                }\n\n                data.repeating.exclude.push(excludedDate);\n            });\n        }\n\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's summary\n     *\n     * @param {String} summary\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.summary = function(summary) {\n        if(summary === undefined) {\n            return data.summary;\n        }\n\n        data.summary = summary ? summary.toString() : '';\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's location\n     *\n     * @param {String} location\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.location = function(location) {\n        if(location === undefined) {\n            return data.location;\n        }\n\n        data.location = location ? location.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's description\n     *\n     * @param {String} description\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.description = function(description) {\n        if(description === undefined) {\n            return data.description;\n        }\n\n        data.description = description ? description.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's HTML description\n     *\n     * @param {String} description\n     * @since 0.2.8\n     * @returns {ICalEvent|String}\n     */\n    this.htmlDescription = function(htmlDescription) {\n        if(htmlDescription === undefined) {\n            return data.htmlDescription;\n        }\n\n        data.htmlDescription = htmlDescription ? htmlDescription.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's organizer\n     *\n     * @param {Object} organizer\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.organizer = function(_organizer) {\n        if(_organizer === undefined) {\n            return data.organizer;\n        }\n        if(!_organizer) {\n            data.organizer = null;\n            return this;\n        }\n\n        var organizer = null,\n            organizerRegEx = /^(.+) ?<([^>]+)>$/;\n\n        if(typeof _organizer === 'string' && organizerRegEx.test(_organizer)) {\n            organizer = {\n                name: RegExp.$1.trim(),\n                email: RegExp.$2\n            };\n        }\n        else if(typeof _organizer === 'object') {\n            organizer = {\n                name: _organizer.name,\n                email: _organizer.email\n            };\n        }\n        else if(typeof _organizer === 'string') {\n            throw '`organizer` isn\\'t formated correctly. See https://github.com/sebbo2002/ical-generator#organizerstringobject-organizer';\n        }\n        else {\n            throw '`organizer` needs to be a valid formed string or an object. See https://github.com/sebbo2002/ical-generator#organizerstringobject-organizer';\n        }\n\n        if(!organizer.name) {\n            throw '`organizer.name` is empty!';\n        }\n        if(!organizer.email) {\n            throw '`organizer.email` is empty!';\n        }\n\n        data.organizer = {\n            name: organizer.name,\n            email: organizer.email\n        };\n        return this;\n    };\n\n\n    /**\n     * Create a new Attendee and return the attendee object…\n     *\n     * @param [attendeeData] Attendee-Options\n     * @since 0.2.0\n     * @returns {ICalAttendee}\n     */\n    this.createAttendee = function(_attendeeData) {\n        var ICalAttendee = require('./attendee.js'),\n            attendeeRegEx = /^(.+) ?<([^>]+)>$/,\n            attendee;\n\n        if(typeof _attendeeData === 'string' && attendeeRegEx.test(_attendeeData)) {\n            attendee = new ICalAttendee({\n                name: RegExp.$1.trim(),\n                email: RegExp.$2\n            }, this);\n\n            data.attendees.push(attendee);\n            return attendee;\n        }\n        if(typeof _attendeeData === 'string') {\n            throw '`attendee` isn\\'t formated correctly. See https://github.com/sebbo2002/ical-generator#createattendeeobject-options';\n        }\n\n        attendee = new ICalAttendee(_attendeeData, this);\n        data.attendees.push(attendee);\n        return attendee;\n    };\n\n\n    /**\n     * Get all attendees or add attendees…\n     *\n     * @since 0.2.0\n     * @returns {ICalAttendees[]|ICalEvent}\n     */\n    this.attendees = function(attendees) {\n        if(!attendees) {\n            return data.attendees;\n        }\n\n        var cal = this;\n        attendees.forEach(function(e) {\n            cal.createAttendee(e);\n        });\n        return cal;\n    };\n\n\n    /**\n     * Create a new Alarm and return the alarm object…\n     *\n     * @param [alarmData] Alarm-Options\n     * @since 0.2.1\n     * @returns {ICalAlarm}\n     */\n    this.createAlarm = function(alarmData) {\n        var ICalAlarm = require('./alarm.js'),\n            alarm = new ICalAlarm(alarmData, this);\n\n        data.alarms.push(alarm);\n        return alarm;\n    };\n\n\n    /**\n     * Get all alarms or add alarms…\n     *\n     * @since 0.2.0\n     * @returns {ICalAlarms[]|ICalEvent}\n     */\n    this.alarms = function(alarms) {\n        if(!alarms) {\n            return data.alarms;\n        }\n\n        var cal = this;\n        alarms.forEach(function(e) {\n            cal.createAlarm(e);\n        });\n        return cal;\n    };\n\n\n    /**\n     * Set/Get your feed's method\n     *\n     * @param {String} method\n     * @since 0.2.0\n     * @deprecated since 0.2.8\n     * @returns {ICalEvent|String}\n     */\n    this.method = function(method) {\n        if(method === undefined) {\n            return calendar.method();\n        }\n        if(!method) {\n            calendar.method(null);\n            return this;\n        }\n\n        calendar.method(method);\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's status\n     *\n     * @param {String} status\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.status = function(status) {\n        if(status === undefined) {\n            return data.status;\n        }\n        if(!status) {\n            data.status = null;\n            return this;\n        }\n\n        // https://github.com/sebbo2002/ical-generator/issues/45\n        if(status === 'TENATIVE') {\n            status = 'TENTATIVE';\n        }\n        if(vars.allowedStatuses.indexOf(status.toUpperCase()) === -1) {\n            throw '`status` must be one of the following: ' + vars.allowedStatuses.join(', ') + '!';\n        }\n\n        data.status = status.toUpperCase();\n        return this;\n    };\n\n\n    /**\n     * Set/Get the event's URL\n     *\n     * @param {String} url URL\n     * @since 0.2.0\n     * @returns {ICalEvent|String}\n     */\n    this.url = function(url) {\n        if(url === undefined) {\n            return data.url;\n        }\n\n        data.url = url ? url.toString() : null;\n        return this;\n    };\n\n\n    /**\n     * Export calender as JSON Object to use it later…\n     *\n     * @since 0.2.4\n     * @returns Object Calendar\n     */\n    this.toJSON = function() {\n        var tools = require('./_tools.js');\n        return tools.toJSON(this, attributes);\n    };\n\n\n    /**\n     * Export Event to iCal\n     *\n     * @param {ICalCalendar}\n     * @since 0.2.0\n     * @returns {String}\n     */\n    this.generate = function(calendar) {\n        var tools = require('./_tools.js'),\n            g = '';\n\n        if(!calendar) {\n            throw '`calendar` option required!';\n        }\n        if(!data.start) {\n            throw 'No value for `start` in ICalEvent #' + data.id + ' given!';\n        }\n        if(data.timezone) {\n            data.floating = false;\n        }\n\n        // DATE & TIME\n        g += 'BEGIN:VEVENT\\r\\n';\n        g += 'UID:' + data.id + '@' + calendar.domain() + '\\r\\n';\n\n        // SEQUENCE\n        g += 'SEQUENCE:' + data.sequence + '\\r\\n';\n\n        g += 'DTSTAMP:' + tools.formatDate(data.stamp) + '\\r\\n';\n        if(data.allDay) {\n            g += 'DTSTART;VALUE=DATE:' + tools.formatDate(data.start, true) + '\\r\\n';\n            if(data.end) {\n                g += 'DTEND;VALUE=DATE:' + tools.formatDate(data.end, true) + '\\r\\n';\n            }\n\n            g += 'X-MICROSOFT-CDO-ALLDAYEVENT:TRUE\\r\\n';\n            g += 'X-MICROSOFT-MSNCALENDAR-ALLDAYEVENT:TRUE\\r\\n';\n        } else {\n            g += tools.formatDateTZ('DTSTART', data.start, data) + '\\r\\n';\n            if(data.end) {\n                g += tools.formatDateTZ('DTEND', data.end, data) + '\\r\\n';\n            }\n        }\n\n        // REPEATING\n        if(data.repeating) {\n            g += 'RRULE:FREQ=' + data.repeating.freq;\n\n            if(data.repeating.count) {\n                g += ';COUNT=' + data.repeating.count;\n            }\n\n            if(data.repeating.interval) {\n                g += ';INTERVAL=' + data.repeating.interval;\n            }\n\n            if(data.repeating.until) {\n                g += ';UNTIL=' + tools.formatDate(data.repeating.until);\n            }\n\n            if(data.repeating.byDay) {\n                g += ';BYDAY=' + data.repeating.byDay.join(',');\n            }\n\n            if(data.repeating.byMonth) {\n                g += ';BYMONTH=' + data.repeating.byMonth.join(',');\n            }\n\n            if(data.repeating.byMonthDay) {\n                g += ';BYMONTHDAY=' + data.repeating.byMonthDay.join(',');\n            }\n\n            g += '\\r\\n';\n\n            // REPEATING EXCLUSION\n            if(data.repeating.exclude) {\n                g += 'EXDATE:';\n                var sArr = [];\n                data.repeating.exclude.forEach(function(excludedDate) {\n                    sArr.push(tools.formatDate(excludedDate));\n                });\n                g += sArr.join(',');\n\n                g += '\\r\\n';\n            }\n        }\n\n        // SUMMARY\n        g += 'SUMMARY:' + tools.escape(data.summary) + '\\r\\n';\n\n        // LOCATION\n        if(data.location) {\n            g += 'LOCATION:' + tools.escape(data.location) + '\\r\\n';\n        }\n\n        // DESCRIPTION\n        if(data.description) {\n            g += 'DESCRIPTION:' + tools.escape(data.description) + '\\r\\n';\n        }\n\n        // HTML DESCRIPTION\n        if(data.htmlDescription) {\n            g += 'X-ALT-DESC;FMTTYPE=text/html:' + tools.escape(data.htmlDescription) + '\\r\\n';\n        }\n\n        // ORGANIZER\n        if(data.organizer) {\n            g += 'ORGANIZER;CN=\"' + tools.escape(data.organizer.name) + '\":mailto:' + tools.escape(data.organizer.email) + '\\r\\n';\n        }\n\n        // ATTENDEES\n        data.attendees.forEach(function(attendee) {\n            g += attendee.generate();\n        });\n\n        // ALARMS\n        data.alarms.forEach(function(alarm) {\n            g += alarm.generate();\n        });\n\n        // URL\n        if(data.url) {\n            g += 'URL;VALUE=URI:' + tools.escape(data.url) + '\\r\\n';\n        }\n\n        // STATUS\n        if(data.status) {\n            g += 'STATUS:' + data.status.toUpperCase() + '\\r\\n';\n        }\n\n        g += 'END:VEVENT\\r\\n';\n        return g;\n    };\n\n\n    for(i in _data) {\n        if(_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n            this[i](_data[i]);\n        }\n    }\n};\n\nmodule.exports = ICalEvent;\n","/home/travis/build/npmtest/node-npmtest-ical-generator/node_modules/ical-generator/lib/_tools.js":"'use strict';\n\nmodule.exports = {};\n\nmodule.exports.formatDate = function formatDate(d, dateonly, floating) {\n    var s;\n\n    function pad(i) {\n        return (i < 10 ? '0' : '') + i;\n    }\n\n    s = d.getUTCFullYear();\n    s += pad(d.getUTCMonth() + 1);\n    s += pad(d.getUTCDate());\n\n    if(!dateonly) {\n        s += 'T';\n        s += pad(d.getUTCHours());\n        s += pad(d.getUTCMinutes());\n        s += pad(d.getUTCSeconds());\n\n        if(!floating) {\n            s += 'Z';\n        }\n    }\n\n    return s;\n};\n\n// For information about this format, see RFC 5545, section 3.3.5\n// https://tools.ietf.org/html/rfc5545#section-3.3.5\nmodule.exports.formatDateTZ = function formatDateTZ(property, date, eventData) {\n    var tzParam = '',\n        floating = eventData.floating;\n\n    if(eventData.timezone) {\n        tzParam = ';TZID=' + eventData.timezone;\n\n        // This isn't a 'floating' event because it has a timezone;\n        // but we use it to omit the 'Z' UTC specifier in formatDate()\n        floating = true;\n    }\n\n    return property + tzParam + ':' + module.exports.formatDate(date, false, floating);\n};\n\nmodule.exports.escape = function escape(str) {\n    return str.replace(/[\\\\;,\"]/g, function(match) {\n        return '\\\\' + match;\n    }).replace(/(?:\\r\\n|\\r|\\n)/g, '\\\\n');\n};\n\nmodule.exports.duration = function duration(seconds) {\n    var string = '';\n\n    // < 0\n    if(seconds < 0) {\n        string = '-';\n        seconds *= -1;\n    }\n\n    string += 'P';\n\n    // DAYS\n    if(seconds >= 86400) {\n        string += Math.floor(seconds / 86400) + 'D';\n        seconds %= 86400;\n    }\n    if(!seconds && string.length > 1) {\n        return string;\n    }\n\n    string += 'T';\n\n    // HOURS\n    if(seconds >= 3600) {\n        string += Math.floor(seconds / 3600) + 'H';\n        seconds %= 3600;\n    }\n\n    // MINUTES\n    if(seconds >= 60) {\n        string += Math.floor(seconds / 60) + 'M';\n        seconds %= 60;\n    }\n\n    // SECONDS\n    if(seconds > 0) {\n        string += seconds + 'S';\n    }\n    else if(string.length <= 2) {\n        string += '0S';\n    }\n\n    return string;\n};\n\nmodule.exports.toJSON = function(object, attributes, options) {\n    var result = {};\n    options = options || {};\n    options.ignoreAttributes = options.ignoreAttributes || [];\n    options.hooks = options.hooks || {};\n\n    attributes.forEach(function(attribute) {\n        if(options.ignoreAttributes.indexOf(attribute) !== -1) {\n            return;\n        }\n\n        var value = object[attribute](),\n            newObj;\n\n        if(options.hooks[attribute]) {\n            value = options.hooks[attribute](value);\n        }\n        if(!value) {\n            return;\n        }\n\n        result[attribute] = value;\n\n        if(Array.isArray(result[attribute])) {\n            newObj = [];\n            result[attribute].forEach(function(object) {\n                newObj.push(object.toJSON());\n            });\n            result[attribute] = newObj;\n        }\n    });\n\n    return result;\n};\n\nmodule.exports.foldLines = function(input) {\n    return input.split('\\r\\n').map(function(line) {\n        return line.match(/(.{1,74})/g).join('\\r\\n ');\n    }).join('\\r\\n');\n};"}